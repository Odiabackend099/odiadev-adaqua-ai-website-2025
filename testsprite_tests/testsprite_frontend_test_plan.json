[
  {
    "id": "TC001",
    "title": "Marketing Website Load and SEO Validation",
    "description": "Verify the marketing homepage loads correctly with product descriptions, CTAs, trust signals, and passes Lighthouse audit with performance ≥ 85 and accessibility ≥ 90 on mobile.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to odia.dev landing page"
      },
      {
        "type": "assertion",
        "description": "Check hero section, product cards, CTAs, and company info are displayed correctly"
      },
      {
        "type": "assertion",
        "description": "Verify textual content matches product overview and key features"
      },
      {
        "type": "action",
        "description": "Run Lighthouse audit for performance and accessibility on mobile"
      },
      {
        "type": "assertion",
        "description": "Confirm Lighthouse scores: Performance ≥ 85 and Accessibility ≥ 90"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Signup and Email Verification",
    "description": "Verify new users can sign up via email, receive verification email, and sign in successfully after verification.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to signup page"
      },
      {
        "type": "action",
        "description": "Input valid email and password and submit signup form"
      },
      {
        "type": "assertion",
        "description": "Check confirmation message for verification email sent"
      },
      {
        "type": "action",
        "description": "Simulate email link click to verify account"
      },
      {
        "type": "action",
        "description": "Attempt login with verified credentials"
      },
      {
        "type": "assertion",
        "description": "Confirm successful login and access to user dashboard"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Assistant Creation Wizard - Complete Flow",
    "description": "Verify that users can create an assistant by naming it, selecting a persona, setting greeting message and intents, choosing web chat channel, and generating embed snippet.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to assistant creation wizard"
      },
      {
        "type": "action",
        "description": "Enter a unique assistant name"
      },
      {
        "type": "action",
        "description": "Select a persona from Ezinne, Lexi, ODIA, Atlas"
      },
      {
        "type": "action",
        "description": "Configure greeting message and select intent templates"
      },
      {
        "type": "action",
        "description": "Select web chat channel and generate embed snippet"
      },
      {
        "type": "assertion",
        "description": "Embed snippet is correctly generated and displays valid HTML script"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Web Chat Widget - Text Chat Interaction",
    "description": "Verify that the embedded web chat widget loads on user's website, supports text chat input/output, and renders messages with correct UI theme and accessibility features.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Embed generated snippet into a test website (static and dynamic)"
      },
      {
        "type": "action",
        "description": "Load website and open web chat widget"
      },
      {
        "type": "action",
        "description": "Send text message through chat input"
      },
      {
        "type": "assertion",
        "description": "Verify assistant responds correctly with text messages"
      },
      {
        "type": "assertion",
        "description": "Confirm UI theme is dark ODIADEV theme and accessible (ARIA roles, keyboard navigation)"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Web Chat Widget - Voice Mode with TTS Playback",
    "description": "Verify voice chat mode can be toggled, TTS audio plays only after user gesture, and correct Nigerian persona voice is used.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open chat widget on test site"
      },
      {
        "type": "action",
        "description": "Toggle voice mode on"
      },
      {
        "type": "action",
        "description": "Send text message to assistant"
      },
      {
        "type": "assertion",
        "description": "Check that TTS audio plays only after user gesture or fallback tap to play works"
      },
      {
        "type": "assertion",
        "description": "Validate correct persona voice ID is used and audio stream content type is correct"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "TTS Proxy Edge Function - Text Length Validation and Error Retry",
    "description": "Verify TTS proxy function enforces text length limits and on server 5xx errors retries twice before fallback.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send TTS request with text exceeding max allowed length"
      },
      {
        "type": "assertion",
        "description": "Check rejection of request with proper validation error"
      },
      {
        "type": "action",
        "description": "Simulate upstream 5xx error from TTS API"
      },
      {
        "type": "assertion",
        "description": "Ensure proxy retries twice and after failures returns fallback text-only response"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "AI Brain Server - Chat Response and Health Check",
    "description": "Verify that the AI brain server handles chat requests intelligently with correct CORS headers and exposes health check endpoint.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a valid chat message request with user context"
      },
      {
        "type": "assertion",
        "description": "Check for valid AI chat response with expected format"
      },
      {
        "type": "action",
        "description": "Request health check endpoint"
      },
      {
        "type": "assertion",
        "description": "Verify 200 OK with server health status"
      },
      {
        "type": "assertion",
        "description": "Confirm CORS headers restrict to allowed origins"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "User Authentication Session Management and Security",
    "description": "Verify user sessions persist correctly across reloads, email verification status is enforced, and no secrets or tokens are exposed to client or logs.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login with valid and verified user credentials"
      },
      {
        "type": "action",
        "description": "Reload page and verify session persists"
      },
      {
        "type": "action",
        "description": "Attempt login with unverified email"
      },
      {
        "type": "assertion",
        "description": "Check access denied pending email verification"
      },
      {
        "type": "action",
        "description": "Review browser network logs during login and chat interactions"
      },
      {
        "type": "assertion",
        "description": "Confirm no secret API keys or tokens are exposed"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Role-Level Security (RLS) and Tenant Data Isolation",
    "description": "Verify RLS policies restrict access so users only see their own assistants, conversations, and data.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as User A and list assistants and conversations"
      },
      {
        "type": "assertion",
        "description": "Verify only User A's data is visible"
      },
      {
        "type": "action",
        "description": "Attempt to access User B's assistant or conversation data via API"
      },
      {
        "type": "assertion",
        "description": "Confirm access denied by RLS policies"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Analytics Tracking Accuracy and Latency",
    "description": "Verify analytics data for conversations, message counts, and audio usage update in near real-time (within 60 seconds).",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Perform chats sending multiple messages and voice usage in a session"
      },
      {
        "type": "action",
        "description": "Navigate to CRM dashboard analytics page"
      },
      {
        "type": "assertion",
        "description": "Confirm conversation counts and audio usage metrics reflect recent activity within 60 seconds"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Chat Widget Offline Handling and Recovery",
    "description": "Verify that the web chat widget detects network loss, displays offline banner, and gracefully recovers without crashes after reconnection.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger simulated network loss while chat widget is open"
      },
      {
        "type": "assertion",
        "description": "Offline banner is displayed clearly to user"
      },
      {
        "type": "action",
        "description": "Restore network connectivity"
      },
      {
        "type": "assertion",
        "description": "Chat widget resumes normal operation without crashes or errors"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Embed Widget on Static vs Dynamic Pages",
    "description": "Verify the embed snippet works correctly on both static HTML pages and dynamic Single Page Applications rendering the chat interface correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Add embed snippet to a static HTML page and load"
      },
      {
        "type": "assertion",
        "description": "Chat widget initializes and is fully interactive"
      },
      {
        "type": "action",
        "description": "Add embed snippet to a dynamic SPA (React-based) page and navigate to chat"
      },
      {
        "type": "assertion",
        "description": "Chat widget loads and functions properly without script conflicts"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Persona Voice ID Mapping Accuracy",
    "description": "Verify that each persona selection maps exactly to the correct native Nigerian voice ID used in TTS playback.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Select each persona (Ezinne, Lexi, ODIA, Atlas) when creating assistant"
      },
      {
        "type": "action",
        "description": "Trigger voice playback in chat widget"
      },
      {
        "type": "assertion",
        "description": "Validate that Ezinne plays naija_female_warm voice"
      },
      {
        "type": "assertion",
        "description": "Validate that Lexi plays naija_female_bold voice"
      },
      {
        "type": "assertion",
        "description": "Validate that ODIA plays naija_male_deep voice"
      },
      {
        "type": "assertion",
        "description": "Validate that Atlas plays naija_male_warm voice"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "CORS Policy Enforcement on API Endpoints",
    "description": "Verify that CORS policies on AI Brain server and TTS proxy restrict origins to only allowed domains preventing unauthorized resource access.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send API request with Origin header set to allowed domain"
      },
      {
        "type": "assertion",
        "description": "Response includes appropriate CORS headers allowing request"
      },
      {
        "type": "action",
        "description": "Send API request with Origin header set to unauthorized domain"
      },
      {
        "type": "assertion",
        "description": "Response rejects CORS request disallowing access"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Basic Functionality of Future Messaging Integrations (Telegram and WhatsApp)",
    "description": "Verify placeholders for Telegram bot connector and WhatsApp onboarding flows exist, allowing input of BotFather tokens, webhook setup, and template management according to planned expansions.",
    "category": "functional",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to integrations section in CRM dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify presence of input fields for Telegram BotFather token and WhatsApp Business webhook URL"
      },
      {
        "type": "action",
        "description": "Enter valid and invalid tokens/URLs and submit"
      },
      {
        "type": "assertion",
        "description": "Confirm validation feedback and proper error handling on inputs"
      }
    ]
  }
]
